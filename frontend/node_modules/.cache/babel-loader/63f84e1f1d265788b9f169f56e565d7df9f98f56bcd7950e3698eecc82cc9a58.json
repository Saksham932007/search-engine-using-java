{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nclass DocumentService {\n  async indexDocument(title, content, url) {\n    try {\n      const formData = new FormData();\n      formData.append('title', title);\n      formData.append('content', content);\n      formData.append('url', url);\n      const response = await axios.post(`${API_BASE_URL}/documents`, formData);\n      return response.data;\n    } catch (error) {\n      console.error('Index document error:', error);\n      throw error;\n    }\n  }\n  async uploadFile(file, title, url) {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      if (title) formData.append('title', title);\n      if (url) formData.append('url', url);\n      const response = await axios.post(`${API_BASE_URL}/documents/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Upload file error:', error);\n      throw error;\n    }\n  }\n  async indexFilePath(path, title, url) {\n    try {\n      const formData = new FormData();\n      formData.append('path', path);\n      if (title) formData.append('title', title);\n      if (url) formData.append('url', url);\n      const response = await axios.post(`${API_BASE_URL}/documents/index-path`, formData);\n      return response.data;\n    } catch (error) {\n      console.error('Index file path error:', error);\n      throw error;\n    }\n  }\n  async indexDirectory(path, recursive = false) {\n    try {\n      const formData = new FormData();\n      formData.append('path', path);\n      formData.append('recursive', recursive);\n      const response = await axios.post(`${API_BASE_URL}/documents/index-directory`, formData);\n      return response.data;\n    } catch (error) {\n      console.error('Index directory error:', error);\n      throw error;\n    }\n  }\n  async getAllDocuments() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/documents`);\n      return response.data;\n    } catch (error) {\n      console.error('Get all documents error:', error);\n      throw error;\n    }\n  }\n  async deleteDocument(id) {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/documents/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Delete document error:', error);\n      throw error;\n    }\n  }\n  async reindexAllDocuments() {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/documents/reindex`);\n      return response.data;\n    } catch (error) {\n      console.error('Reindex all documents error:', error);\n      throw error;\n    }\n  }\n  async getDocumentStats() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/documents/stats`);\n      return response.data;\n    } catch (error) {\n      console.error('Get document stats error:', error);\n      throw error;\n    }\n  }\n}\nexport default new DocumentService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","DocumentService","indexDocument","title","content","url","formData","FormData","append","response","post","data","error","console","uploadFile","file","headers","indexFilePath","path","indexDirectory","recursive","getAllDocuments","get","deleteDocument","id","delete","reindexAllDocuments","getDocumentStats"],"sources":["/home/sakshamkapoor/Projects/search engine/frontend/src/services/DocumentService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nclass DocumentService {\n  async indexDocument(title, content, url) {\n    try {\n      const formData = new FormData();\n      formData.append('title', title);\n      formData.append('content', content);\n      formData.append('url', url);\n\n      const response = await axios.post(`${API_BASE_URL}/documents`, formData);\n      return response.data;\n    } catch (error) {\n      console.error('Index document error:', error);\n      throw error;\n    }\n  }\n\n  async uploadFile(file, title, url) {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      if (title) formData.append('title', title);\n      if (url) formData.append('url', url);\n\n      const response = await axios.post(`${API_BASE_URL}/documents/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Upload file error:', error);\n      throw error;\n    }\n  }\n\n  async indexFilePath(path, title, url) {\n    try {\n      const formData = new FormData();\n      formData.append('path', path);\n      if (title) formData.append('title', title);\n      if (url) formData.append('url', url);\n\n      const response = await axios.post(`${API_BASE_URL}/documents/index-path`, formData);\n      return response.data;\n    } catch (error) {\n      console.error('Index file path error:', error);\n      throw error;\n    }\n  }\n\n  async indexDirectory(path, recursive = false) {\n    try {\n      const formData = new FormData();\n      formData.append('path', path);\n      formData.append('recursive', recursive);\n\n      const response = await axios.post(`${API_BASE_URL}/documents/index-directory`, formData);\n      return response.data;\n    } catch (error) {\n      console.error('Index directory error:', error);\n      throw error;\n    }\n  }\n\n  async getAllDocuments() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/documents`);\n      return response.data;\n    } catch (error) {\n      console.error('Get all documents error:', error);\n      throw error;\n    }\n  }\n\n  async deleteDocument(id) {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/documents/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Delete document error:', error);\n      throw error;\n    }\n  }\n\n  async reindexAllDocuments() {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/documents/reindex`);\n      return response.data;\n    } catch (error) {\n      console.error('Reindex all documents error:', error);\n      throw error;\n    }\n  }\n\n  async getDocumentStats() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/documents/stats`);\n      return response.data;\n    } catch (error) {\n      console.error('Get document stats error:', error);\n      throw error;\n    }\n  }\n}\n\nexport default new DocumentService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}